"use strict";(self.webpackChunkwebsite_operator=self.webpackChunkwebsite_operator||[]).push([[1625],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=s(r),f=o,y=m["".concat(p,".").concat(f)]||m[f]||u[f]||a;return r?n.createElement(y,i(i({ref:t},l),{},{components:r})):n.createElement(y,i({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5448:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return l},default:function(){return m}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],c={title:"Data In Memory",description:"Data In Memory"},p=void 0,s={unversionedId:"Data-in-memory",id:"Data-in-memory",isDocsHomePage:!1,title:"Data In Memory",description:"Data In Memory",source:"@site/docs/Data-in-memory.md",sourceDirName:".",slug:"/Data-in-memory",permalink:"/kubernetes-operator/next/Data-in-memory",editUrl:"https://github.com/aerospike/kubernetes-operator/edit/main/docs/Data-in-memory.md",tags:[],version:"current",frontMatter:{title:"Data In Memory",description:"Data In Memory"},sidebar:"docsSidebar",previous:{title:"Scaling Namespace Storage",permalink:"/kubernetes-operator/next/Scaling-namespace-storage"},next:{title:"Data On SSD",permalink:"/kubernetes-operator/next/Data-on-SSD"}},l=[{value:"Create the namespace configuration",id:"create-the-namespace-configuration",children:[]},{value:"Deploy the cluster",id:"deploy-the-cluster",children:[]}],u={toc:l};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Here we provide namespace storage configuration for storing namespace data in memory only."),(0,a.kt)("p",null,"For more details, visit ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aerospike.com/docs/configure/namespace/storage/#recipe-for-data-in-memory-without-persistence"},"configuration of data-in-memory"),"."),(0,a.kt)("h2",{id:"create-the-namespace-configuration"},"Create the namespace configuration"),(0,a.kt)("p",null,"Following is the Storage specific config for aerospike cluster CR file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"  aerospikeConfig:\n    namespaces:\n      - name: test\n        memory-size: 3000000000\n        replication-factor: 2\n        storage-engine:\n          type: memory\n")),(0,a.kt)("p",null,"Get full CR file ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-kubernetes-operator/tree/2.0.0-rc1/config/samples/dim_nostorage_cluster_cr.yaml"},"here"),"."),(0,a.kt)("h2",{id:"deploy-the-cluster"},"Deploy the cluster"),(0,a.kt)("p",null,"Follow the instructions ",(0,a.kt)("a",{parentName:"p",href:"/kubernetes-operator/next/Create-Aerospike-cluster#deploy-aerospike-cluster"},"here")," to deploy this configuration."))}m.isMDXComponent=!0}}]);