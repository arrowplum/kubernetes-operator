"use strict";(self.webpackChunkwebsite_operator=self.webpackChunkwebsite_operator||[]).push([[821],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return k}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=l(t),k=o,d=m["".concat(s,".").concat(k)]||m[k]||u[k]||a;return t?n.createElement(d,i(i({ref:r},c),{},{components:t})):n.createElement(d,i({ref:r},c))}));function k(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var p={};for(var s in r)hasOwnProperty.call(r,s)&&(p[s]=r[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3930:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var n=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],p={title:"Monitoring",description:"Monitoring"},s=void 0,l={unversionedId:"Monitoring",id:"version-1.x.x/Monitoring",isDocsHomePage:!1,title:"Monitoring",description:"Monitoring",source:"@site/versioned_docs/version-1.x.x/Monitoring.md",sourceDirName:".",slug:"/Monitoring",permalink:"/kubernetes-operator/Monitoring",editUrl:"https://github.com/aerospike/kubernetes-operator/edit/main/versioned_docs/version-1.x.x/Monitoring.md",tags:[],version:"1.x.x",frontMatter:{title:"Monitoring",description:"Monitoring"},sidebar:"version-1.x.x/docsSidebar",previous:{title:"Multiple Aerospike Clusters",permalink:"/kubernetes-operator/Multiple-Aerospike-clusters"},next:{title:"XDR",permalink:"/kubernetes-operator/XDR"}},c=[{value:"Add Aerospike Prometheus Exporter Sidecar",id:"add-aerospike-prometheus-exporter-sidecar",children:[]},{value:"Deploy or Update Aerospike Cluster (Custom Resource)",id:"deploy-or-update-aerospike-cluster-custom-resource",children:[]},{value:"Prometheus Configuration",id:"prometheus-configuration",children:[]},{value:"Quick Example",id:"quick-example",children:[]}],u={toc:c};function m(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.aerospike.com/docs/tools/monitorstack/index.md"},"Aerospike Monitoring Stack")," can be used to enable monitoring and alerting for Aerospike clusters deployed by the Aerospike Kubernetes Operator."),(0,a.kt)("h2",{id:"add-aerospike-prometheus-exporter-sidecar"},"Add Aerospike Prometheus Exporter Sidecar"),(0,a.kt)("p",null,"Add the exporter as a sidecar to each Aerospike server pod using the ",(0,a.kt)("a",{parentName:"p",href:"/kubernetes-operator/Cluster-configuration-settings#pod-spec"},"PodSpec configuration"),". For example,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'spec:\n .\n .\n .\n\n  podSpec:\n    sidecars:\n      - name: aerospike-prometheus-exporter\n        image: "aerospike/aerospike-prometheus-exporter:1.3.0"\n        ports:\n          - containerPort: 9145\n            name: aerospike-prometheus-exporter\n\n .\n .\n .\n')),(0,a.kt)("h2",{id:"deploy-or-update-aerospike-cluster-custom-resource"},"Deploy or Update Aerospike Cluster (Custom Resource)"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/kubernetes-operator/Create-Aerospike-cluster"},"Create or update")," your clusters once the Prometheus exporter sidecar is added."),(0,a.kt)("h2",{id:"prometheus-configuration"},"Prometheus Configuration"),(0,a.kt)("p",null,"Configure Prometheus to add exporter endpoints as scrape targets."),(0,a.kt)("p",null,"If Prometheus is also running on Kubernetes, it can be configured to extract exporter targets from Kubernetes API."),(0,a.kt)("p",null,"In the following example, Prometheus will be able to discover and add exporter targets in ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," namespace which has endpoint port name as ",(0,a.kt)("inlineCode",{parentName:"p"},"aerospike-prometheus-exporter"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"scrape_configs:\n  - job_name: 'aerospike'\n\n    kubernetes_sd_configs:\n    - role: endpoints\n      namespaces:\n        names:\n        - default\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_endpoint_port_name]\n      separator: ;\n      regex: aerospike-prometheus-exporter\n      replacement: $1\n      action: keep\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aerospike.com/docstools/monitorstack/index.md"},"Aerospike Monitoring Stack")," for its installation, configuration and setup guide."),(0,a.kt)("h2",{id:"quick-example"},"Quick Example"),(0,a.kt)("p",null,"This example demonstrates monitoring of Aerospike clusters deployed by Kubernetes Operator using Aerospike Monitoring Stack."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Add Aerospike helm repository"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"helm repo add aerospike https://aerospike.github.io/aerospike-kubernetes-enterprise\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Deploy Aerospike Kubernetes Operator using helm chart"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"helm install operator aerospike/aerospike-kubernetes-operator --set replicas=1\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a Kubernetes secret to store Aerospike license feature key file"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl create secret generic aerospike-license --from-file=<path-to-features.conf-file>\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Deploy Aerospike cluster with Aerospike Prometheus Exporter sidecar"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'cat << EOF | helm install aerospike aerospike/aerospike-cluster \\\n--set devMode=true \\\n--set aerospikeSecretName=aerospike-license \\\n-f -\npodSpec:\n  sidecars:\n  - name: aerospike-prometheus-exporter\n    image: "aerospike/aerospike-prometheus-exporter:1.3.0"\n    ports:\n    - containerPort: 9145\n      name: exporter\nEOF\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Deploy Prometheus-Grafana Stack using ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aerospike.com/docscloud/assets/aerospike-monitoring-stack.yaml"},"aerospike-monitoring-stack.yaml")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl apply -f ./aerospike-monitoring-stack.yaml\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Connect to Grafana dashboard,"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl port-forward service/aerospike-monitoring-stack-grafana 3000:80\n")),(0,a.kt)("p",{parentName:"li"},"Open ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost:3000")," in browser, and login to Grafana as ",(0,a.kt)("inlineCode",{parentName:"p"},"admin"),"/",(0,a.kt)("inlineCode",{parentName:"p"},"admin"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Import dashboards from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aerospike/aerospike-monitoring/tree/master/config/grafana/dashboards"},"Aerospike Monitoring GitHub Repo")," and visualise metrics."))))}m.isMDXComponent=!0}}]);